type User {
  id: String!
  firstName: String!
  lastName: String!
  email: String!
}

# type Friend {
#   id: Int!
#   firstName: String!
#   lastName: String!
#   email: String!
# }

type GetUserPayload {
  id: String
  firstName: String
  lastName: String
  email: String
  youSent: Boolean
  heSent: Boolean
  notYet: Boolean
  friendRequestId: String
  isFriend: Boolean
  errors: Error
}

type Query {
  getUser(email: String!): GetUserPayload!
  getMyFriends: [User]!
  me: User!
  hello: String!
}

type AuthPayload {
  isOk: Boolean!
  token: String
  errors: [Error]
}

type Mutation {
  signup(
    password: String!
    firstName: String!
    lastName: String!
    email: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  ######
  updateUser(
    firstName: String
    lastName: String
    email: String
    id: String!
  ): User!
  deleteUser(id: String!): Boolean
  ####
  sendFriendRequest(userId: String!): Boolean!
  acceptFriendRequest(friendRequestId: String!): Boolean!
}
